$ cat exp3.cmd
#!/bin/bash

set -x  # echo commands

time ./crc8_bqm_emb.py -f 'exp3.{0:04d}.txt' \
    -n 400 \
    -t 4 \
    -c 00110011 \
    -i 00000000 \
    -d 00001111 xxxxxxxx 00110011 xxxxxxxx 01010101 xxxxxxxx 10011001 xxxxxxxx

$ ./exp3.cmd > exp3.log 2>&1

$ ls exp3.[0-9][0-9][0-9][0-9].txt | wc -l
71

71 of 400 attempts to find an embedding succeeded.

$ egrep 'max_chain_len' exp3.[0-9][0-9][0-9][0-9].txt | sort -k 3n | head -12
exp3.0357.txt:max_chain_len = 11  <<--
exp3.0122.txt:max_chain_len = 12
exp3.0296.txt:max_chain_len = 12
exp3.0113.txt:max_chain_len = 13
exp3.0168.txt:max_chain_len = 13
exp3.0212.txt:max_chain_len = 13
exp3.0287.txt:max_chain_len = 13
exp3.0020.txt:max_chain_len = 14
exp3.0081.txt:max_chain_len = 14
exp3.0149.txt:max_chain_len = 14
exp3.0154.txt:max_chain_len = 14
exp3.0163.txt:max_chain_len = 15

$ egrep 'avg_chain_len' exp3.[0-9][0-9][0-9][0-9].txt | sort -k 3n | head -12
exp3.0357.txt:avg_chain_len = 3.105556  <<--
exp3.0168.txt:avg_chain_len = 3.169444
exp3.0209.txt:avg_chain_len = 3.202778
exp3.0163.txt:avg_chain_len = 3.205556
exp3.0287.txt:avg_chain_len = 3.211111
exp3.0364.txt:avg_chain_len = 3.225000
exp3.0154.txt:avg_chain_len = 3.236111
exp3.0296.txt:avg_chain_len = 3.263889
exp3.0149.txt:avg_chain_len = 3.266667
exp3.0081.txt:avg_chain_len = 3.283333
exp3.0113.txt:avg_chain_len = 3.291667
exp3.0212.txt:avg_chain_len = 3.300000

Embedding 0357 appears to be the best.
Its max chain len, 11, is the shortest of any found.
Its avg chain len, 3.105556, is also the shortest of any found.

$ egrep 'max_chain_len' exp3.[0-9][0-9][0-9][0-9].txt | sort -k 3n | tail -12
exp3.0186.txt:max_chain_len = 28
exp3.0360.txt:max_chain_len = 28
exp3.0134.txt:max_chain_len = 29
exp3.0278.txt:max_chain_len = 29
exp3.0215.txt:max_chain_len = 30
exp3.0256.txt:max_chain_len = 30
exp3.0309.txt:max_chain_len = 30
exp3.0074.txt:max_chain_len = 31
exp3.0330.txt:max_chain_len = 35
exp3.0263.txt:max_chain_len = 36
exp3.0038.txt:max_chain_len = 38
exp3.0070.txt:max_chain_len = 42

$ egrep 'avg_chain_len' exp3.[0-9][0-9][0-9][0-9].txt | sort -k 3n | tail -12
exp3.0186.txt:avg_chain_len = 3.697222
exp3.0392.txt:avg_chain_len = 3.708333
exp3.0255.txt:avg_chain_len = 3.719444
exp3.0291.txt:avg_chain_len = 3.741667
exp3.0330.txt:avg_chain_len = 3.747222
exp3.0094.txt:avg_chain_len = 3.752778
exp3.0023.txt:avg_chain_len = 3.775000
exp3.0393.txt:avg_chain_len = 3.775000
exp3.0344.txt:avg_chain_len = 3.819444
exp3.0210.txt:avg_chain_len = 3.891667
exp3.0309.txt:avg_chain_len = 3.925000
exp3.0038.txt:avg_chain_len = 4.047222

$ ./crc8_qpu.py -f exp3.0357.txt -s exp3.0357.sampset.01.txt -n 4000

$ ./crc8_examine_samples.py -f exp3.0357.txt -s exp3.0357.sampset.01.txt > exp3.0357.sampset.01.all.txt

$ cat exp3.0357.sampset.01.all.txt | egrep valid
crc8 00110011 init 00000000 data 00001111 01010101 00110011 11111110 01010101 01111111 10011001 11101110 energy  204.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110 energy  192.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 01010101 00110011 10111110 01010101 01111111 10011001 11111110 energy  202.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 01011111 00110011 11111010 01010101 01111111 10011001 11101111 energy  208.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110 energy  187.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 11111111 01010101 01011111 10011001 11101110 energy  189.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 01010101 00110011 11111110 01010101 01011111 10011001 11111110 energy  197.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110 energy  187.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 10111111 01010101 01011111 10011001 11111110 energy  201.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11011101 00110011 10111110 01010101 00111110 10011001 11111101 energy  204.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11001101 00110011 11111110 01010101 01111111 10011001 10111111 energy  185.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11111100 00110011 10111110 01010101 01111110 10011001 11111100 energy  206.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11011100 00110011 11111011 01010101 01111111 10011001 11111110 energy  188.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110 energy  202.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11011100 00110011 11011111 01010101 00110111 10011001 11111101 energy  188.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11011100 00110011 10111011 01010101 01011111 10011001 11111110 energy  207.0 computed-crc8 00110011 valid
crc8 00110011 init 00000000 data 00001111 11011100 00110011 10111110 01010101 01110110 10011001 11111100 energy  205.0 computed-crc8 00110011 valid

$ cat exp3.0357.sampset.01.all.txt | egrep valid | wc -l
17

$ cat exp3.0357.sampset.01.all.txt | egrep valid | cut -c29-104
data 00001111 01010101 00110011 11111110 01010101 01111111 10011001 11101110
data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110
data 00001111 01010101 00110011 10111110 01010101 01111111 10011001 11111110
data 00001111 01011111 00110011 11111010 01010101 01111111 10011001 11101111
data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110
data 00001111 11010100 00110011 11111111 01010101 01011111 10011001 11101110
data 00001111 01010101 00110011 11111110 01010101 01011111 10011001 11111110
data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110
data 00001111 11010100 00110011 10111111 01010101 01011111 10011001 11111110
data 00001111 11011101 00110011 10111110 01010101 00111110 10011001 11111101
data 00001111 11001101 00110011 11111110 01010101 01111111 10011001 10111111
data 00001111 11111100 00110011 10111110 01010101 01111110 10011001 11111100
data 00001111 11011100 00110011 11111011 01010101 01111111 10011001 11111110
data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110
data 00001111 11011100 00110011 11011111 01010101 00110111 10011001 11111101
data 00001111 11011100 00110011 10111011 01010101 01011111 10011001 11111110
data 00001111 11011100 00110011 10111110 01010101 01110110 10011001 11111100

$ cat exp3.0357.sampset.01.all.txt | egrep valid | cut -c29-104 | sort | uniq -c
      1 data 00001111 01010101 00110011 10111110 01010101 01111111 10011001 11111110
      1 data 00001111 01010101 00110011 11111110 01010101 01011111 10011001 11111110
      1 data 00001111 01010101 00110011 11111110 01010101 01111111 10011001 11101110
      1 data 00001111 01011111 00110011 11111010 01010101 01111111 10011001 11101111
      1 data 00001111 11001101 00110011 11111110 01010101 01111111 10011001 10111111
      1 data 00001111 11010100 00110011 10111111 01010101 01011111 10011001 11111110
      1 data 00001111 11010100 00110011 11111111 01010101 01011111 10011001 11101110
      4 data 00001111 11010100 00110011 11111111 01010101 01111111 10011001 11111110
      1 data 00001111 11011100 00110011 10111011 01010101 01011111 10011001 11111110
      1 data 00001111 11011100 00110011 10111110 01010101 01110110 10011001 11111100
      1 data 00001111 11011100 00110011 11011111 01010101 00110111 10011001 11111101
      1 data 00001111 11011100 00110011 11111011 01010101 01111111 10011001 11111110
      1 data 00001111 11011101 00110011 10111110 01010101 00111110 10011001 11111101
      1 data 00001111 11111100 00110011 10111110 01010101 01111110 10011001 11111100

$ cat exp3.0357.sampset.01.all.txt | egrep valid | cut -c29-104 | sort | uniq -c | wc -l
14

Of the 4000 samples read from the QPU, 17 are valid, and 14 distinct valid
solutions were found.


